version: '2'

services:
    web:
      image: nginx:latest
      container_name: nginx
      ports:
        - "80:80"
      volumes:
        - ./webroot:/webroot
        # - ./ssl/nginx-selfsigned.crt:/etc/ssl/certs/nginx-selfsigned.crt
        # - ./ssl/nginx-selfsigned.key:/etc/ssl/private/nginx-selfsigned.key
        - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
        # - ./nginx/nginx-ssl.conf:/etc/nginx/conf.d/default-ssl.conf
        - ./logs:/var/log/nginx
      links:
        - php
    php:
      build:
        context: ./php
      ports:
        - 9000:9000
      volumes:
        - ./webroot:/webroot
        - ./php/www.conf:/usr/local/etc/php-fpm.d/www.conf
      environment:
        - DB_PORT=3306
        - DB_HOST=mysql
        - MYSQL_DATABASE=${MYSQL_DATABASE}
        - MYSQL_USER=${MYSQL_USER}
        - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    mysql:
      image: mysql:5.7
      container_name: mysql
      ports:
        - "3306:3306"
      links:
        - php
      # command: --init-file /data/application/init.sql
      # command: mysqld --plugin-load=mysqlx=mysqlx.so
      # command: mysqld --default-authentication-plugin=mysql_native_password
      # entrypoint: ['docker-entrypoint.sh', '--default-authentication-plugin=mysql_native_password']
      environment: 
        - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
        - MYSQL_DATABASE=${MYSQL_DATABASE}
        - MYSQL_USER=${MYSQL_USER}
        - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      volumes:
        - ./dbdata:/var/lib/mysql
        - ./dbstructure/dbdump.sql:/docker-entrypoint-initdb.d/dbdump.sql
